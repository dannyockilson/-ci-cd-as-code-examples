#!/usr/bin/env groovy
@Library("pipeline@release/2.x") _

/**
 * This file tells Pipeline Jenkins how to build and deploy the project.
 * See https://wiki.indeed.com/display/PIPELINE/The+Jenkinsfile for details.
 */

script = this

bootstrap(script) {
    // Git URL
    gitConfig.gitUrl = "git@code.corp.indeed.com:indeediq/ci-cd-as-code-examples.git"
    // Main development branch. Note: if you put develop here, master will be ignored by the pipeline.
    gitConfig.gitBranch = "master"
    // JIRA project where deploy tickets should be created
    jiraConfig.jiraProjectKey = "IIQDASH"
    // Path to the deployable generated by the ant command
    buildConfig.deployablePath = "build.zip" // For gradle project
    // buildConfig.deployablePath = "dist/ci-cd-as-code-examples.tar.gz" // For ant project

    // Jenkins will send an email when there is a new build available to the following list of comma-separated addresses
    config.newBuildAvailableEmailList = "indeediq-dashboard-testing@indeed.com"
    // Jenkins will send an email if the build fails to the following list of comma-separated addresses and everyone who committed since the last successful build
    config.failureEmailList = config.newBuildAvailableEmailList
    // Product group
    config.productGroup = "indeediq-dashboard"
    // Uses dockerized build
    config.buildInDocker = true

    // A list of URLs of your current version in QA and stage
    // Example: https://example.sandbox.qa.indeed.net/private/healthcheck
    config.currentVersionUrlList = []
    config.versionCheckRetries = 10
    config.versionCheckSleepIntervalSeconds = 15

    // A list of URLs of your healthchecks in QA and stage
    // For example: https://example.sandbox.qa.indeed.net/private/healthcheck
    config.healthCheckUrlList = []
    config.healthCheckRetries = 10
    config.healthCheckSleepIntervalSeconds = 5

    // A list of URLs of your current version in prod
    // For example: https://example.com/private/current_version.txt
    config.currentProdVersionUrlList = []

    // Set true to fail the build if verification instructions are not provided in annotated git tags for each issue
    config.requireVerificationInstructions = false

    // Set true to enable Slack notifications
    slackConfig.enable = false
    slackConfig.channel = "#channel-name"

    // full push-on-green setting. To enable manual approval see https://wiki.indeed.com/display/PIPELINE/How+to+disable+Full+Push-on-Green+on+new+Penelope+project
    config.defaultPushOnGreen = false
}

buildPipeline(script) {
    pipelineNode(nodeName: 'indeed-node12-large', script) {
        pipelineStage(script, "Install") {
            sh 'npm ci'
        }
        pipelineStage(script, "Lint") {
            sh 'npm run lint'
        }
        pipelineStage(script, "Test") {
            sh 'CI=true npm test'
        }
        pipelineStage(script, "Build") {
            sh 'npm run build'
        }

        stash includes: 'build/**/*', name: 'deployable'
    }
    
    pipelineNode(nodeName: 'python3', script) {
        
        unstash deployable

        pipelineStage(script, "Deploy") {
            sh 'zip -r build.zip build'
            echo 'do a deploy'
        }
    }
}
